services:
  app:
    build:
      context: .
      target: ${GO_ENV}
    container_name: sca_app
    restart: always
    env_file:
      - ./.env
    environment:
      PORT: ${PORT}
      LOG_LEVEL: ${LOG_LEVEL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    depends_on:
      migrate:
        condition: service_completed_successfully
    ports:
      - 8080:8080
    volumes:
      - .:/app

  db:
    image: postgres:bookworm
    container_name: sca_postgres
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [CMD-SHELL, "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data

  migrate:
    image: migrate/migrate
    container_name: sca_migrate
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations/:/migrations
    command: ["-path", "/migrations/", "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}?sslmode=disable", "up"]

volumes:
  pg_data:

